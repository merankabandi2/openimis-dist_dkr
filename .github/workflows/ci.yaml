name: CI pipeline
on:
  push:
    branches:
      - main
      - 'release/**'
      - develop
      - 'feature/**'
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    inputs:
      comment:
        description: "Purpose of the manual run:"
        required: false
jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  test:
    name: Cypress
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup environment
        run: |
          cp .env.example .env
          echo 'DEMO_DATASET=true' >> .env
          sed -i 's/BE_TAG=develop/BE_TAG=coreMIS/g' .env
          sed -i 's/FE_TAG=develop/FE_TAG=coreMIS/g' .env
          cp .env.redis.example .env.redis
          cp .env.openSearch.example .env.openSearch
          cp .env.database.example .env.database

          docker compose up -d db
          echo "Waiting for database to be healthy..."
          DB_CONTAINER=$(docker compose ps -q db)
          until [ "$(docker inspect -f '{{.State.Health.Status}}' $DB_CONTAINER)" == "healthy" ]; do
            sleep 2;
          done
          echo "Database is ready"
          docker compose up -d

      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          record: true
          parallel: true
          wait-on: 'http://localhost/front/'
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

