name: CI pipeline
on:
  push:
    branches:
      - main
      - 'release/**'
      - develop
      - 'feature/**'
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    inputs:
      comment:
        description: "Purpose of the manual run:"
        required: false
jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  test:
    name: Cypress
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup environment
        run: |
          cp .env.example .env
          echo 'DEMO_DATASET=true' >> .env
          echo 'BE_TAG=develop' >> .env
          echo 'FE_TAG=develop' >> .env
          echo 'SECRET_KEY=cypressci' >> .env
          cp .env.redis.example .env.redis
          cp .env.openSearch.example .env.openSearch
          cp .env.database.example .env.database

          docker compose up -d

          echo "Waiting for 'Starting Django...' in backend logs..."
          BACKEND_CONTAINER=$(docker compose ps -q backend)

          for i in {1..30}; do
            if docker logs $BACKEND_CONTAINER 2>&1 | grep -q "Starting Django..."; then
              echo "Server is ready"
              exit 0
            fi
            echo "Not ready yet... retry $i/30"
            docker logs --tail 50 $BACKEND_CONTAINER || true
            sleep 10
          done

          echo "Server did not start in 5 minutes"
          docker logs $BACKEND_CONTAINER || true
          exit 1

      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          record: true
          parallel: true
          wait-on: 'http://localhost/front/'
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

