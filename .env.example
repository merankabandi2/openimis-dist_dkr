# docker-compose parameters
# docker compose project name
PROJECT_NAME=demo
# urls
# url of openimis, FQDN
DOMAIN=demo.openimis.org
# allowed host for CORS and CSFR, coma sepataed values
HOSTS=${DOMAIN}
# http port for openimis
HTTP_PORT=80
# https port for openimis
HTTPS_PORT=443

# Uncomment the line below to intiate the database with the DEMO dataset, it will create an empty openIMIS database otherwise
#DEMO_DATASET=true
DB_PASSWORD=IMISuserP@s
DB_USER=IMISuser
DB_NAME=IMIS
# If MSSQL DB required DB_DEFAULT=postgresql and DB_PORT=5432,  uncomment DB_DEFAULT=mssql, DB_PORT=1433 and ACCEPT_EULA (= y if you accept MS EULA)
# database parameters
DB_HOST=db
# Use PostgreSQL DB
DB_DEFAULT=postgresql
# PostgreSQL port
DB_PORT=5432
# Use MSSQL DB
#DB_DEFAULT=mssql
# MSSQL port
#DB_PORT=1433
#ACCEPT_EULA= <y if you accept MS EULA >
GATEWAY_PORT_S=443
# site root for backend
SITE_ROOT=api

# github branches to use
# Database, you can use develop branch too
DB_TAG=24.10
# BE assembly image tag
BE_TAG=24.10
#FE assembly, image tag
FE_TAG=24.10

#one-liner json config for the FE (to override the openimis.json from the FE assembly)
#OPENIMIS_FE_CONF_JSON=
#one-liner json config for the FE (to overright the openimis.json from the FE assembly)
#OPENIMIS_FE_CONF_JSON=

# django log level
DJANGO_LOG_LEVEL=WARNING
# django log handler (currently: degub-log (default), db-queries, console)
DJANGO_LOG_HANDLER=debug-log
# should the database be migrated at every container startup. Will be done anyway if $SITE_ROOT=api
DJANGO_MIGRATE=True

CSRF_TRUSTED_ORIGINS=http://localhost
